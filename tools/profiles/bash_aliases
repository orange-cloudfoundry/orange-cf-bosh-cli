#--- Git aliases
alias checkout='function __gco() { git checkout $1 ; git pull --rebase; }; __gco'
alias commit='function __gcm() { git add . ; git commit -m "$1" ; unset -f __gcm; }; __gcm'
alias gitlog='git log --graph --pretty=format:'\''%C(yellow)%H%Creset -%C(yellow)%d%Creset %s %Cgreen(%cn %ci)%Creset'\'' --abbrev-commit'
alias init-git='/usr/local/bin/init-git.sh'
alias prune='git fetch --prune'
alias pull='git pull --rebase ; git fetch --prune'
alias push='/usr/local/bin/git-push.sh'
alias status='git status'

#--- Bosh aliases
alias bosh-depls-failed="bosh is --json | jq -r '.Tables[].Rows[]|select(.process_state == (\"failing\",\"unresponsive agent\"))|.deployment + \" (\" + .instance + \") : \" + .process_state'"
alias bosh-events="bosh events | grep \"hm \" | grep -E \"create|delete\""
alias bosh-task='function __bt() { bosh task $1 --debug | grep -vE " BEGIN| COMMIT| SELECT |INSERT INTO|DELETE FROM| UPDATE | WHERE |Renewing lock"; }; __bt'
alias clean-prometheus-tasks='for var in $(bosh tasks | grep "prometheus" | grep -E "queued|processing" | sed -e "s+\t.*++g") ; do bosh cancel-task $var ; done'
alias credhub-get='function __cg() { index=$2 ; log-credhub -i ; credhub get -n $1 --versions=$(($index + 1)) -j | jq -r .versions[$index].value; }; __cg'
alias fly='fly -t concourse'
alias hm-bosh-tasks="bosh tasks -a -r=20000 --json | jq -r '.Tables[].Rows[]|select(.user == \"hm\")|.started_at + \" \" + .id + \" \" +  .description + \" \" + .deployment + \" => \" + .result'"
alias log-bosh='. /usr/local/bin/log-bosh.sh'
alias log-cf='. /usr/local/bin/log-cf.sh'
alias log-credhub='. /usr/local/bin/log-credhub.sh'
alias log-fly='. /usr/local/bin/log-fly.sh'
alias log-govc='. /usr/local/bin/log-govc.sh'
alias log-shield='. /usr/local/bin/log-shield.sh'
alias log-uaac='. /usr/local/bin/log-uaac.sh'
alias prune-workers='fly prune-worker -a'
alias recreate-concourse-workers='bosh -d concourse recreate worker --canaries=0 --max-in-flight=10'
alias switch='. /usr/local/bin/switch-bosh.sh'

#--- k8s aliases
alias check-k8s='/usr/local/bin/check-k8s.sh'
alias flux='export FLUX_SYSTEM_NAMESPACE=fluxcd ; export KNS=$(/usr/local/bin/kubens -c 2> /dev/null) ; flux $@'
alias k='/usr/local/bin/kubectl'
alias kns='/usr/local/bin/kubens'
alias kubens='/usr/local/bin/kubens'
alias kube-mode='. /usr/local/bin/kube-mode.sh'
alias kube-tail='/usr/local/bin/kube-tail.sh'
alias kt='kube-tail'
alias k9s='/usr/local/bin/k9s-run.sh $@'
alias k9s-screen='/usr/local/bin/k9s-screen.sh'
alias log-k8s='. /usr/local/bin/log-k8s.sh'
alias tk='testkube'

#--- Tools aliases
alias diff='colordiff'
alias f='function __f() { printf "%100s\n"|tr " " "=";find . ! -regex ".*[/]\.git[/]?.*" ! -regex ".*last-deployment-failure\.yml" -type f,l -not -xtype l -not -xtype d -print0 | xargs -0 grep -I -i --color "$1";unset -f __f;printf "%100s\n"|tr " " "="; }; __f'
alias generate-password='apg -MCLN -n 1 -m 30'
alias ps1-clear='unset BOSH_TARGET ; unset KCTX ; unset KNS'
alias proxy='. /usr/local/bin/proxy.sh'
alias show-cert='function __scrt() { openssl x509 -text -certopt no_header,no_version,no_signame,no_pubkey,no_sigdump -nocert -in $1; }; __scrt'
alias show-csr='function __scsr() { openssl req -noout -text -in $1; }; __scsr'
alias start-tinyproxy='sudo tinyproxy ; sleep 1 ; ps -ef | grep tinyproxy | grep -v grep'
alias stop-tinyproxy='sudo pkill -e tinyproxy'
alias tn='function __tn() { echo -ne "\033]0;$@\007";unset -f __t;printf "\n"; }; __tn'
alias toggle-proxy='. /usr/local/bin/proxy.sh'
alias tools='. /usr/local/bin/tools.sh'
alias vm-info='/usr/local/bin/get-vm-info.sh'